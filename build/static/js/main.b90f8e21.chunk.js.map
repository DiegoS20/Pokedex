{"version":3,"sources":["media/images/pokeball.png","media/images/pokedex_text.png","Searcher.js","Header.js","PokemonCard.js","Body.js","js/functions.js","Main.js","index.js","App.js"],"names":["module","exports","Searcher","props","state","inputText","e","this","timeOut","setTimeout","onQueryStringChange","clearTimeOut","className","type","placeholder","autoFocus","onKeyUp","handleKeyUp","onKeyDown","onInput","setState","target","value","clearTimeout","React","Component","Header","src","pokeball","alt","pokedex","query","PokemonCard","pokemon_info","image","name","id","types","map","toLowerCase","key","Body","pokemons","getPokemonList","_pokemons","slice","list","limit","Math","ceil","length","i","cols","j","pokemon","push","row","capitalizeWord","word","charAt","toUpperCase","getAPIData","url","a","fetch","response","ok","Error","statusText","json","data","Main","allPokemons","isSearching","searchedPokemons","BASE_URL","POKE_IMAGES_URL","query_str","forEach","includes","console","log","handleQueryStringChange","getPokemons","results","result","getInfoPokemon","info","pokemon_url","_id","toString","reverse","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,iRCEtBC,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,UAAW,IAHA,E,yEAOPC,GAAI,IAAD,OACXC,KAAKC,QAAUC,YAAW,WACtB,EAAKN,MAAMO,oBAAoB,EAAKN,MAAMC,WAC1C,EAAKM,iBACN,O,+BAGG,IAAD,OACL,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,gBACX,2BACIC,KAAK,OACLC,YAAY,2BACZC,WAAS,EACTC,QAAS,SAAAV,GAAC,OAAI,EAAKW,YAAYX,IAC/BY,UAAW,kBAAM,EAAKP,gBACtBQ,QAAS,SAAAb,GACL,EAAKc,SAAS,CAAEf,UAAWC,EAAEe,OAAOC,e,qCAQpDf,KAAKC,UACLe,aAAahB,KAAKC,gBACXD,KAAKC,a,GApCcgB,IAAMC,W,0CCM7B,SAASC,EAAOvB,GAC3B,OACI,gCACI,yBAAKS,UAAU,aACX,yBAAKA,UAAU,QAAO,yBAAKe,IAAKC,IAAUC,IAAI,cAC9C,yBAAKjB,UAAU,QACX,yBAAKe,IAAKG,IAASD,IAAI,mBAG/B,kBAAC,EAAD,CACInB,oBAAqB,SAAAqB,GAAK,OAAI5B,EAAMO,oBAAoBqB,OChBzD,SAASC,EAAT,GAAwC,IAAjBC,EAAgB,EAAhBA,aAClC,OACI,yBAAKrB,UAAU,iBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SACX,yBAAKe,IAAKM,EAAaC,MAAOL,IAAKI,EAAaE,OAAQ,8BAE5D,yBAAKvB,UAAU,eACX,0BAAMA,UAAU,MAAhB,SAAyBqB,EAAaG,IACtC,yBAAKxB,UAAU,QAAQqB,EAAaE,MACpC,yBAAKvB,UAAU,SACVqB,EAAaI,MAAMC,KAAI,SAAAzB,GAAI,OACxB,yBACID,UAAS,oBAAeC,EAAK0B,eAC7BC,IAAK3B,GAAQA,U,sBCTxB4B,E,iLAGb,IAAMC,EAAWnC,KAAKoC,eAAepC,KAAKJ,MAAMuC,UAChD,OACI,8BACI,yBAAK9B,UAAU,qBACV8B,M,qCAMFA,GAKX,IAJA,IAAIE,EAAYF,EAASG,QACrBC,EAAO,GAELC,EAAQC,KAAKC,KAAKP,EAASQ,OADd,GAEVC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAE5B,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAJD,EAIiBA,IAAK,CACjC,IAAMC,EAAUV,EAAUS,GAC1B,GAAuB,qBAAZC,EAAyB,MACpCF,EAAKG,KACD,kBAACvB,EAAD,CACIQ,IAAKc,EAAQlB,GACbH,aAAcqB,KAG1B,IAAME,EAAM,yBAAKhB,IAAKW,EAAGvC,UAAU,OAAOwC,GAC1CN,EAAKS,KAAKC,GACVZ,EAAYA,EAAUC,MAfP,GAiBnB,OAAOC,M,GAjCmBtB,IAAMC,WCP3BgC,EAAiB,SAAAC,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKb,MAAM,GAAGN,eAE5E,SAAesB,EAAtB,kC,4CAAO,WAA0BC,GAA1B,iBAAAC,EAAA,sEACoBC,MAAMF,GAD1B,WACGG,EADH,QAEWC,GAFX,sBAEqB,IAAIC,MAAMF,EAASG,YAFxC,uBAGgBH,EAASI,OAHzB,cAGGC,EAHH,yBAIIA,GAJJ,4C,gCCKcC,E,YAEjB,WAAYpE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACToE,YAAa,GACbC,aAAa,EACbC,iBAAkB,IAGtB,EAAKC,SAAW,wDAChB,EAAKC,gBAAkB,6DATR,E,qFAYK7C,GACpB,GAAKA,EAAL,CAKA,IAAMW,EAAWnC,KAAKH,MAAMoE,YACtBE,EAAmB,GACnBG,EAAY9C,EAAMQ,cACxBG,EAASoC,SAAQ,SAAAxB,GACIA,EAAQnB,KAAKI,cACjBwC,SAASF,IAClBH,EAAiBnB,KAAKD,MAG9B/C,KAAKa,SAAS,CACVqD,aAAa,EACbC,qBAEJM,QAAQC,IAAIP,QAjBRnE,KAAKa,SAAS,CAAEqD,aAAa,M,+BAoB3B,IAAD,SACkDlE,KAAKH,MAApDoE,EADH,EACGA,YAAaC,EADhB,EACgBA,YAAaC,EAD7B,EAC6BA,iBAClC,OACI,yBAAK9D,UAAU,YACX,kBAACc,EAAD,CACIhB,oBAAqB,SAAAqB,GAAK,OAAI,EAAKmD,wBAAwBnD,MAC/D,kBAAC,EAAD,CACIW,SAAW+B,EAA4BC,EAAdF,O,kLAMXjE,KAAK4E,YAAY5E,KAAKoE,U,OAA1CH,E,OACNjE,KAAKa,SAAS,CAAEoD,gB,iLAGFV,G,sFACVpB,EAAW,G,kBAEQmB,EAAWC,G,OAAxBO,E,OACGlB,EAAI,E,YAAGA,EAAIkB,EAAKe,QAAQlC,Q,wBACvBmC,EAAShB,EAAKe,QAAQjC,G,UACT5C,KAAK+E,eAAeD,EAAOvB,K,QAC5B,OADZyB,E,QACGrD,OAAeQ,EAASa,KAAKgC,G,QAHDpC,I,yEAMzC6B,QAAQC,IAAR,M,iCAEGvC,G,+LAGU8C,G,sGAEM3B,EAAW2B,G,cAAxBnB,E,OACAoB,EAAMpB,EAAKjC,GAAGsD,WACdtD,EAAoB,IAAfqD,EAAIvC,OAAJ,YAAwBuC,GAAuB,IAAfA,EAAIvC,OAAJ,WAAuBuC,GAAQA,EACtEpD,EAAQgC,EAAKhC,MAAMC,KAAI,SAAAzB,GAAI,OAAI4C,EAAe5C,EAAKA,KAAKsB,S,kBACrD,CACHA,KAAMsB,EAAeY,EAAKlC,MAC1BD,MAAO3B,KAAKqE,gBAAL,UAA0BxC,EAA1B,QACPA,GAAIA,EACJC,MAAOA,EAAMsD,Y,kCAGjBX,QAAQC,IAAR,M,sHAjFsBzD,IAAMC,WCHxCmE,IAASC,OACL,mBCKW,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzB,QDT7C,MACA0B,SAASC,eAAe,W","file":"static/js/main.b90f8e21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.468f7826.png\";","module.exports = __webpack_public_path__ + \"static/media/pokedex_text.d9031165.png\";","import React from 'react';\r\n\r\nexport default class Searcher extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputText: '',\r\n        }\r\n    }\r\n\r\n    handleKeyUp(e) {\r\n        this.timeOut = setTimeout(() => {\r\n            this.props.onQueryStringChange(this.state.inputText);\r\n            this.clearTimeOut();\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searcher\">\r\n                <div className=\"search-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Write your pokemon name!\"\r\n                        autoFocus\r\n                        onKeyUp={e => this.handleKeyUp(e)}\r\n                        onKeyDown={() => this.clearTimeOut()}\r\n                        onInput={e => {\r\n                            this.setState({ inputText: e.target.value })\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    clearTimeOut() {\r\n        if (this.timeOut) {\r\n            clearTimeout(this.timeOut);\r\n            delete this.timeOut;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Searcher from './Searcher.js';\r\n\r\nimport './css/header.css';\r\n\r\nimport pokeball from './media/images/pokeball.png';\r\nimport pokedex from './media/images/pokedex_text.png';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <header>\r\n            <div className=\"logo-name\">\r\n                <div className=\"logo\"><img src={pokeball} alt=\"Pokeball\" /></div>\r\n                <div className=\"name\">\r\n                    <img src={pokedex} alt=\"Pokedex text\" />\r\n                </div>\r\n            </div>\r\n            <Searcher\r\n                onQueryStringChange={query => props.onQueryStringChange(query)}></Searcher>\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function PokemonCard({ pokemon_info }) {\r\n    return (\r\n        <div className=\"cols col-sm-3\">\r\n            <div className=\"poke_card\">\r\n                <div className=\"image\">\r\n                    <img src={pokemon_info.image} alt={pokemon_info.name} /><br />\r\n                </div>\r\n                <div className=\"information\">\r\n                    <span className=\"id\">NÂ° {pokemon_info.id}</span>\r\n                    <div className=\"name\">{pokemon_info.name}</div>\r\n                    <div className=\"types\">\r\n                        {pokemon_info.types.map(type =>\r\n                            <div\r\n                                className={`type-cont ${type.toLowerCase()}`}\r\n                                key={type} >{type}</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PokemonCard from './PokemonCard.js';\r\n\r\nimport './css/body.css';\r\nimport './css/types_colors.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default class Body extends React.Component\r\n{\r\n    render () {\r\n        const pokemons = this.getPokemonList(this.props.pokemons);\r\n        return (\r\n            <main>\r\n                <div className=\"bg-pokemons-cards\">\r\n                    {pokemons}\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n\r\n    getPokemonList(pokemons) {\r\n        let _pokemons = pokemons.slice(),\r\n            list = [];\r\n        const poke_x_row = 4;\r\n        const limit = Math.ceil(pokemons.length / poke_x_row);\r\n        for (let i = 0; i < limit; i++) {\r\n            let cols = [];\r\n            for (let j = 0; j < poke_x_row; j++) {\r\n                const pokemon = _pokemons[j];\r\n                if (typeof pokemon === 'undefined') break;\r\n                cols.push(\r\n                    <PokemonCard\r\n                        key={pokemon.id}\r\n                        pokemon_info={pokemon} />\r\n                );\r\n            }\r\n            const row = <div key={i} className=\"row\">{cols}</div>\r\n            list.push(row);\r\n            _pokemons = _pokemons.slice(poke_x_row);\r\n        }\r\n        return list;\r\n    }\r\n}\r\n","export const capitalizeWord = word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n\r\nexport async function getAPIData(url) {\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(response.statusText);\r\n    const data = await response.json();\r\n    return data;\r\n}","import React from 'react';\r\nimport Header from './Header.js';\r\nimport Body from './Body.js';\r\nimport { capitalizeWord, getAPIData } from './js/functions.js';\r\n\r\nimport './css/main.css';\r\n\r\nexport default class Main extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allPokemons: [],\r\n            isSearching: false,\r\n            searchedPokemons: []\r\n        }\r\n\r\n        this.BASE_URL = 'https://pokeapi.co/api/v2/pokemon/?limit=100&offset=0';\r\n        this.POKE_IMAGES_URL = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\r\n    }\r\n\r\n    handleQueryStringChange(query) {\r\n        if (!query) {\r\n            this.setState({ isSearching: false });\r\n            return;\r\n        }\r\n\r\n        const pokemons = this.state.allPokemons;\r\n        const searchedPokemons = [];\r\n        const query_str = query.toLowerCase();\r\n        pokemons.forEach(pokemon => {\r\n            const _pokemon = pokemon.name.toLowerCase();\r\n            if (_pokemon.includes(query_str)) {\r\n                searchedPokemons.push(pokemon);\r\n            }\r\n        });\r\n        this.setState({\r\n            isSearching: true,\r\n            searchedPokemons\r\n        });\r\n        console.log(searchedPokemons);\r\n    }\r\n\r\n    render() {\r\n        const { allPokemons, isSearching, searchedPokemons } = this.state;\r\n        return (\r\n            <div className=\"document\">\r\n                <Header\r\n                    onQueryStringChange={query => this.handleQueryStringChange(query)}></Header>\r\n                <Body\r\n                    pokemons={!isSearching ? allPokemons : searchedPokemons} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async UNSAFE_componentWillMount() {\r\n        const allPokemons = await this.getPokemons(this.BASE_URL);\r\n        this.setState({ allPokemons });\r\n    }\r\n\r\n    async getPokemons(url) {\r\n        let pokemons = [];\r\n        try {\r\n            const json = await getAPIData(url);\r\n            for (let i = 0; i < json.results.length; i++) {\r\n                const result = json.results[i];\r\n                const info = await this.getInfoPokemon(result.url);\r\n                if (info.image != null) pokemons.push(info);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return pokemons;\r\n    }\r\n\r\n    async getInfoPokemon(pokemon_url) {\r\n        try {\r\n            const json = await getAPIData(pokemon_url);\r\n            const _id = json.id.toString();\r\n            const id = _id.length === 1 ? `00${_id}` : _id.length === 2 ? `0${_id}` : _id;\r\n            let types = json.types.map(type => capitalizeWord(type.type.name));\r\n            return {\r\n                name: capitalizeWord(json.name),\r\n                image: this.POKE_IMAGES_URL + `${id}.png`,\r\n                id: id,\r\n                types: types.reverse(),\r\n            };\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    // Link,\r\n    // useParams\r\n} from 'react-router-dom';\r\nimport Main from './Main.js';\r\n\r\nexport default function App() {    \r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Main} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n"],"sourceRoot":""}